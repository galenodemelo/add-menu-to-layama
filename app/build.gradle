/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

apply plugin: 'java'
apply plugin: 'application'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.3'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'org.jsoup:jsoup:1.15.1'
    implementation 'org.sejda.imageio:webp-imageio:0.1.6'
}

application {
    // Define the main class for the application.
    mainClass = 'com.elephantskin.addmenutolayama.App'
}

run {
    standardInput = System.in
}

task copySources(type: Copy) {
    from "$rootDir/sources"
    into "$buildDir/libs/sources"
}

task copyExecutables(type: Copy) {
    from "$rootDir/executable"
    into "$buildDir/libs"
}

task runJar(type: Jar, dependsOn: ["copySources", "copyExecutables"]) {
    classifier = 'all'
    def jarName = "AddMenuToLayama"

    manifest {
        attributes 'Main-Class': 'com.elephantskin.addmenutolayama.App'
    }

    archiveBaseName = jarName
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    with jar

    doLast {
        javaexec {
            main = "-jar"
            args = [
                "$buildDir/libs/" + jarName + "-all.jar"
            ]
        }
    }
}
